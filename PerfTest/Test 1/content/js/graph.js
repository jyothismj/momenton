/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 791.0, "minX": 0.0, "maxY": 74915.0, "series": [{"data": [[0.0, 791.0], [0.1, 1101.0], [0.2, 1165.0], [0.3, 1236.0], [0.4, 1679.0], [0.5, 1832.0], [0.6, 1951.0], [0.7, 2021.0], [0.8, 2050.0], [0.9, 2124.0], [1.0, 2154.0], [1.1, 2515.0], [1.2, 2581.0], [1.3, 2596.0], [1.4, 2639.0], [1.5, 2694.0], [1.6, 2793.0], [1.7, 3256.0], [1.8, 3353.0], [1.9, 3407.0], [2.0, 3452.0], [2.1, 3520.0], [2.2, 3612.0], [2.3, 3783.0], [2.4, 4618.0], [2.5, 4788.0], [2.6, 4947.0], [2.7, 5005.0], [2.8, 5184.0], [2.9, 5356.0], [3.0, 5396.0], [3.1, 5448.0], [3.2, 5661.0], [3.3, 5922.0], [3.4, 6108.0], [3.5, 6565.0], [3.6, 7436.0], [3.7, 7781.0], [3.8, 7836.0], [3.9, 7969.0], [4.0, 7994.0], [4.1, 8013.0], [4.2, 8106.0], [4.3, 8196.0], [4.4, 8219.0], [4.5, 8278.0], [4.6, 8361.0], [4.7, 8382.0], [4.8, 8478.0], [4.9, 8546.0], [5.0, 8843.0], [5.1, 8985.0], [5.2, 9174.0], [5.3, 9247.0], [5.4, 9409.0], [5.5, 9490.0], [5.6, 9596.0], [5.7, 9652.0], [5.8, 10191.0], [5.9, 10570.0], [6.0, 10826.0], [6.1, 11013.0], [6.2, 11228.0], [6.3, 11535.0], [6.4, 11675.0], [6.5, 11917.0], [6.6, 12124.0], [6.7, 12354.0], [6.8, 12376.0], [6.9, 12488.0], [7.0, 12712.0], [7.1, 13194.0], [7.2, 13388.0], [7.3, 13743.0], [7.4, 13906.0], [7.5, 14048.0], [7.6, 14158.0], [7.7, 14274.0], [7.8, 14350.0], [7.9, 14404.0], [8.0, 14582.0], [8.1, 14689.0], [8.2, 14745.0], [8.3, 14834.0], [8.4, 14938.0], [8.5, 15023.0], [8.6, 15123.0], [8.7, 15185.0], [8.8, 15320.0], [8.9, 15341.0], [9.0, 15379.0], [9.1, 15414.0], [9.2, 15476.0], [9.3, 15569.0], [9.4, 15793.0], [9.5, 15878.0], [9.6, 15940.0], [9.7, 16024.0], [9.8, 16062.0], [9.9, 16198.0], [10.0, 16291.0], [10.1, 16374.0], [10.2, 16406.0], [10.3, 16424.0], [10.4, 16495.0], [10.5, 16565.0], [10.6, 16628.0], [10.7, 16657.0], [10.8, 16707.0], [10.9, 16735.0], [11.0, 16762.0], [11.1, 16774.0], [11.2, 16812.0], [11.3, 16823.0], [11.4, 16859.0], [11.5, 16871.0], [11.6, 16904.0], [11.7, 16911.0], [11.8, 16931.0], [11.9, 16965.0], [12.0, 16981.0], [12.1, 16997.0], [12.2, 17027.0], [12.3, 17048.0], [12.4, 17070.0], [12.5, 17102.0], [12.6, 17104.0], [12.7, 17119.0], [12.8, 17136.0], [12.9, 17184.0], [13.0, 17235.0], [13.1, 17262.0], [13.2, 17321.0], [13.3, 17366.0], [13.4, 17421.0], [13.5, 17459.0], [13.6, 17628.0], [13.7, 17642.0], [13.8, 17733.0], [13.9, 17861.0], [14.0, 17944.0], [14.1, 17983.0], [14.2, 18135.0], [14.3, 18199.0], [14.4, 18251.0], [14.5, 18309.0], [14.6, 18373.0], [14.7, 18452.0], [14.8, 18524.0], [14.9, 18561.0], [15.0, 18613.0], [15.1, 18677.0], [15.2, 18811.0], [15.3, 18967.0], [15.4, 19025.0], [15.5, 19076.0], [15.6, 19173.0], [15.7, 19185.0], [15.8, 19192.0], [15.9, 19203.0], [16.0, 19207.0], [16.1, 19215.0], [16.2, 19218.0], [16.3, 19224.0], [16.4, 19229.0], [16.5, 19233.0], [16.6, 19238.0], [16.7, 19242.0], [16.8, 19263.0], [16.9, 19293.0], [17.0, 19313.0], [17.1, 19329.0], [17.2, 19344.0], [17.3, 19357.0], [17.4, 19368.0], [17.5, 19375.0], [17.6, 19387.0], [17.7, 19388.0], [17.8, 19403.0], [17.9, 19422.0], [18.0, 19428.0], [18.1, 19441.0], [18.2, 19445.0], [18.3, 19449.0], [18.4, 19454.0], [18.5, 19459.0], [18.6, 19462.0], [18.7, 19468.0], [18.8, 19472.0], [18.9, 19481.0], [19.0, 19483.0], [19.1, 19495.0], [19.2, 19502.0], [19.3, 19522.0], [19.4, 19533.0], [19.5, 19545.0], [19.6, 19548.0], [19.7, 19553.0], [19.8, 19568.0], [19.9, 19569.0], [20.0, 19572.0], [20.1, 19575.0], [20.2, 19581.0], [20.3, 19584.0], [20.4, 19586.0], [20.5, 19591.0], [20.6, 19597.0], [20.7, 19601.0], [20.8, 19605.0], [20.9, 19618.0], [21.0, 19628.0], [21.1, 19654.0], [21.2, 19659.0], [21.3, 19664.0], [21.4, 19676.0], [21.5, 19687.0], [21.6, 19703.0], [21.7, 19725.0], [21.8, 19737.0], [21.9, 19750.0], [22.0, 19757.0], [22.1, 19773.0], [22.2, 19856.0], [22.3, 19865.0], [22.4, 19889.0], [22.5, 19925.0], [22.6, 19967.0], [22.7, 19973.0], [22.8, 20028.0], [22.9, 20043.0], [23.0, 20077.0], [23.1, 20101.0], [23.2, 20118.0], [23.3, 20141.0], [23.4, 20157.0], [23.5, 20190.0], [23.6, 20215.0], [23.7, 20286.0], [23.8, 20312.0], [23.9, 20357.0], [24.0, 20368.0], [24.1, 20418.0], [24.2, 20446.0], [24.3, 20458.0], [24.4, 20466.0], [24.5, 20498.0], [24.6, 20528.0], [24.7, 20588.0], [24.8, 20596.0], [24.9, 20655.0], [25.0, 20661.0], [25.1, 20670.0], [25.2, 20711.0], [25.3, 20811.0], [25.4, 20845.0], [25.5, 20938.0], [25.6, 21001.0], [25.7, 21001.0], [25.8, 21002.0], [25.9, 21002.0], [26.0, 21002.0], [26.1, 21003.0], [26.2, 21003.0], [26.3, 21004.0], [26.4, 21004.0], [26.5, 21005.0], [26.6, 21005.0], [26.7, 21006.0], [26.8, 21006.0], [26.9, 21007.0], [27.0, 21007.0], [27.1, 21007.0], [27.2, 21008.0], [27.3, 21008.0], [27.4, 21008.0], [27.5, 21009.0], [27.6, 21009.0], [27.7, 21009.0], [27.8, 21009.0], [27.9, 21009.0], [28.0, 21010.0], [28.1, 21010.0], [28.2, 21010.0], [28.3, 21010.0], [28.4, 21011.0], [28.5, 21011.0], [28.6, 21011.0], [28.7, 21012.0], [28.8, 21012.0], [28.9, 21012.0], [29.0, 21013.0], [29.1, 21013.0], [29.2, 21013.0], [29.3, 21013.0], [29.4, 21013.0], [29.5, 21014.0], [29.6, 21014.0], [29.7, 21014.0], [29.8, 21015.0], [29.9, 21015.0], [30.0, 21015.0], [30.1, 21016.0], [30.2, 21017.0], [30.3, 21017.0], [30.4, 21018.0], [30.5, 21018.0], [30.6, 21018.0], [30.7, 21019.0], [30.8, 21019.0], [30.9, 21020.0], [31.0, 21020.0], [31.1, 21020.0], [31.2, 21021.0], [31.3, 21021.0], [31.4, 21022.0], [31.5, 21023.0], [31.6, 21024.0], [31.7, 21024.0], [31.8, 21025.0], [31.9, 21025.0], [32.0, 21026.0], [32.1, 21026.0], [32.2, 21027.0], [32.3, 21027.0], [32.4, 21028.0], [32.5, 21029.0], [32.6, 21029.0], [32.7, 21031.0], [32.8, 21031.0], [32.9, 21033.0], [33.0, 21033.0], [33.1, 21034.0], [33.2, 21035.0], [33.3, 21036.0], [33.4, 21037.0], [33.5, 21039.0], [33.6, 21040.0], [33.7, 21041.0], [33.8, 21042.0], [33.9, 21042.0], [34.0, 21043.0], [34.1, 21045.0], [34.2, 21046.0], [34.3, 21047.0], [34.4, 21048.0], [34.5, 21049.0], [34.6, 21050.0], [34.7, 21050.0], [34.8, 21051.0], [34.9, 21052.0], [35.0, 21053.0], [35.1, 21053.0], [35.2, 21054.0], [35.3, 21055.0], [35.4, 21056.0], [35.5, 21057.0], [35.6, 21057.0], [35.7, 21058.0], [35.8, 21060.0], [35.9, 21060.0], [36.0, 21061.0], [36.1, 21062.0], [36.2, 21063.0], [36.3, 21064.0], [36.4, 21066.0], [36.5, 21067.0], [36.6, 21067.0], [36.7, 21068.0], [36.8, 21069.0], [36.9, 21070.0], [37.0, 21071.0], [37.1, 21072.0], [37.2, 21073.0], [37.3, 21074.0], [37.4, 21075.0], [37.5, 21075.0], [37.6, 21076.0], [37.7, 21076.0], [37.8, 21077.0], [37.9, 21077.0], [38.0, 21078.0], [38.1, 21080.0], [38.2, 21080.0], [38.3, 21081.0], [38.4, 21082.0], [38.5, 21083.0], [38.6, 21084.0], [38.7, 21084.0], [38.8, 21085.0], [38.9, 21085.0], [39.0, 21086.0], [39.1, 21087.0], [39.2, 21089.0], [39.3, 21092.0], [39.4, 21093.0], [39.5, 21094.0], [39.6, 21094.0], [39.7, 21095.0], [39.8, 21096.0], [39.9, 21097.0], [40.0, 21098.0], [40.1, 21099.0], [40.2, 21100.0], [40.3, 21101.0], [40.4, 21103.0], [40.5, 21103.0], [40.6, 21104.0], [40.7, 21105.0], [40.8, 21107.0], [40.9, 21108.0], [41.0, 21109.0], [41.1, 21110.0], [41.2, 21110.0], [41.3, 21114.0], [41.4, 21115.0], [41.5, 21116.0], [41.6, 21118.0], [41.7, 21119.0], [41.8, 21121.0], [41.9, 21125.0], [42.0, 21127.0], [42.1, 21129.0], [42.2, 21130.0], [42.3, 21132.0], [42.4, 21135.0], [42.5, 21138.0], [42.6, 21140.0], [42.7, 21142.0], [42.8, 21144.0], [42.9, 21147.0], [43.0, 21150.0], [43.1, 21152.0], [43.2, 21157.0], [43.3, 21159.0], [43.4, 21163.0], [43.5, 21166.0], [43.6, 21170.0], [43.7, 21172.0], [43.8, 21173.0], [43.9, 21175.0], [44.0, 21179.0], [44.1, 21181.0], [44.2, 21184.0], [44.3, 21185.0], [44.4, 21187.0], [44.5, 21191.0], [44.6, 21194.0], [44.7, 21194.0], [44.8, 21196.0], [44.9, 21198.0], [45.0, 21200.0], [45.1, 21206.0], [45.2, 21212.0], [45.3, 21220.0], [45.4, 21227.0], [45.5, 21236.0], [45.6, 21241.0], [45.7, 21250.0], [45.8, 21261.0], [45.9, 21270.0], [46.0, 21276.0], [46.1, 21279.0], [46.2, 21293.0], [46.3, 21302.0], [46.4, 21310.0], [46.5, 21333.0], [46.6, 21347.0], [46.7, 21359.0], [46.8, 21366.0], [46.9, 21373.0], [47.0, 21389.0], [47.1, 21403.0], [47.2, 21408.0], [47.3, 21424.0], [47.4, 21431.0], [47.5, 21483.0], [47.6, 21561.0], [47.7, 21676.0], [47.8, 21732.0], [47.9, 21858.0], [48.0, 22068.0], [48.1, 22145.0], [48.2, 22245.0], [48.3, 22289.0], [48.4, 22328.0], [48.5, 22415.0], [48.6, 22500.0], [48.7, 22523.0], [48.8, 22531.0], [48.9, 22540.0], [49.0, 22551.0], [49.1, 22556.0], [49.2, 22567.0], [49.3, 22577.0], [49.4, 22587.0], [49.5, 22595.0], [49.6, 22607.0], [49.7, 22616.0], [49.8, 22625.0], [49.9, 22628.0], [50.0, 22629.0], [50.1, 22649.0], [50.2, 22658.0], [50.3, 22662.0], [50.4, 22669.0], [50.5, 22676.0], [50.6, 22680.0], [50.7, 22687.0], [50.8, 22692.0], [50.9, 22696.0], [51.0, 22707.0], [51.1, 22713.0], [51.2, 22716.0], [51.3, 22724.0], [51.4, 22731.0], [51.5, 22735.0], [51.6, 22743.0], [51.7, 22745.0], [51.8, 22751.0], [51.9, 22754.0], [52.0, 22767.0], [52.1, 22773.0], [52.2, 22803.0], [52.3, 22825.0], [52.4, 22858.0], [52.5, 22887.0], [52.6, 22895.0], [52.7, 22903.0], [52.8, 22933.0], [52.9, 22956.0], [53.0, 22977.0], [53.1, 22990.0], [53.2, 23003.0], [53.3, 23040.0], [53.4, 23074.0], [53.5, 23108.0], [53.6, 23135.0], [53.7, 23157.0], [53.8, 23193.0], [53.9, 23245.0], [54.0, 23308.0], [54.1, 23355.0], [54.2, 23418.0], [54.3, 23504.0], [54.4, 23562.0], [54.5, 23712.0], [54.6, 24048.0], [54.7, 24140.0], [54.8, 24298.0], [54.9, 24422.0], [55.0, 24503.0], [55.1, 24750.0], [55.2, 24910.0], [55.3, 25420.0], [55.4, 25550.0], [55.5, 25623.0], [55.6, 25755.0], [55.7, 25848.0], [55.8, 26022.0], [55.9, 26080.0], [56.0, 26102.0], [56.1, 26358.0], [56.2, 26435.0], [56.3, 26882.0], [56.4, 27010.0], [56.5, 27151.0], [56.6, 27224.0], [56.7, 27403.0], [56.8, 27559.0], [56.9, 27843.0], [57.0, 27963.0], [57.1, 28195.0], [57.2, 28418.0], [57.3, 28688.0], [57.4, 28772.0], [57.5, 28964.0], [57.6, 29093.0], [57.7, 29243.0], [57.8, 29357.0], [57.9, 29472.0], [58.0, 29628.0], [58.1, 29659.0], [58.2, 29726.0], [58.3, 29904.0], [58.4, 29995.0], [58.5, 30070.0], [58.6, 30117.0], [58.7, 30146.0], [58.8, 30177.0], [58.9, 30199.0], [59.0, 30302.0], [59.1, 30423.0], [59.2, 30454.0], [59.3, 30498.0], [59.4, 30512.0], [59.5, 30542.0], [59.6, 30626.0], [59.7, 30761.0], [59.8, 30856.0], [59.9, 30896.0], [60.0, 30935.0], [60.1, 30947.0], [60.2, 30970.0], [60.3, 30997.0], [60.4, 31095.0], [60.5, 31124.0], [60.6, 31175.0], [60.7, 31229.0], [60.8, 31268.0], [60.9, 31284.0], [61.0, 31309.0], [61.1, 31332.0], [61.2, 31383.0], [61.3, 31390.0], [61.4, 31416.0], [61.5, 31451.0], [61.6, 31479.0], [61.7, 31512.0], [61.8, 31528.0], [61.9, 31558.0], [62.0, 31597.0], [62.1, 31608.0], [62.2, 31623.0], [62.3, 31666.0], [62.4, 31695.0], [62.5, 31730.0], [62.6, 31765.0], [62.7, 31810.0], [62.8, 31819.0], [62.9, 31864.0], [63.0, 31885.0], [63.1, 31913.0], [63.2, 31944.0], [63.3, 31978.0], [63.4, 32006.0], [63.5, 32041.0], [63.6, 32104.0], [63.7, 32110.0], [63.8, 32145.0], [63.9, 32157.0], [64.0, 32207.0], [64.1, 32241.0], [64.2, 32293.0], [64.3, 32306.0], [64.4, 32316.0], [64.5, 32327.0], [64.6, 32371.0], [64.7, 32414.0], [64.8, 32432.0], [64.9, 32460.0], [65.0, 32476.0], [65.1, 32489.0], [65.2, 32501.0], [65.3, 32529.0], [65.4, 32544.0], [65.5, 32580.0], [65.6, 32617.0], [65.7, 32637.0], [65.8, 32676.0], [65.9, 32732.0], [66.0, 32745.0], [66.1, 32788.0], [66.2, 32812.0], [66.3, 32822.0], [66.4, 32839.0], [66.5, 32865.0], [66.6, 32888.0], [66.7, 32940.0], [66.8, 32952.0], [66.9, 32971.0], [67.0, 33015.0], [67.1, 33024.0], [67.2, 33037.0], [67.3, 33039.0], [67.4, 33074.0], [67.5, 33081.0], [67.6, 33102.0], [67.7, 33128.0], [67.8, 33164.0], [67.9, 33213.0], [68.0, 33247.0], [68.1, 33266.0], [68.2, 33288.0], [68.3, 33304.0], [68.4, 33313.0], [68.5, 33338.0], [68.6, 33364.0], [68.7, 33377.0], [68.8, 33400.0], [68.9, 33430.0], [69.0, 33451.0], [69.1, 33486.0], [69.2, 33508.0], [69.3, 33523.0], [69.4, 33551.0], [69.5, 33567.0], [69.6, 33603.0], [69.7, 33688.0], [69.8, 33701.0], [69.9, 33749.0], [70.0, 33794.0], [70.1, 33830.0], [70.2, 33854.0], [70.3, 33862.0], [70.4, 33897.0], [70.5, 33932.0], [70.6, 33946.0], [70.7, 33959.0], [70.8, 33984.0], [70.9, 34016.0], [71.0, 34047.0], [71.1, 34072.0], [71.2, 34081.0], [71.3, 34104.0], [71.4, 34128.0], [71.5, 34178.0], [71.6, 34198.0], [71.7, 34236.0], [71.8, 34267.0], [71.9, 34294.0], [72.0, 34312.0], [72.1, 34330.0], [72.2, 34388.0], [72.3, 34423.0], [72.4, 34454.0], [72.5, 34475.0], [72.6, 34504.0], [72.7, 34528.0], [72.8, 34567.0], [72.9, 34586.0], [73.0, 34601.0], [73.1, 34629.0], [73.2, 34670.0], [73.3, 34708.0], [73.4, 34758.0], [73.5, 34816.0], [73.6, 34846.0], [73.7, 34858.0], [73.8, 34895.0], [73.9, 34947.0], [74.0, 34971.0], [74.1, 35019.0], [74.2, 35041.0], [74.3, 35077.0], [74.4, 35115.0], [74.5, 35236.0], [74.6, 35287.0], [74.7, 35321.0], [74.8, 35336.0], [74.9, 35357.0], [75.0, 35396.0], [75.1, 35462.0], [75.2, 35485.0], [75.3, 35548.0], [75.4, 35600.0], [75.5, 35644.0], [75.6, 35685.0], [75.7, 35732.0], [75.8, 35777.0], [75.9, 35815.0], [76.0, 35857.0], [76.1, 35887.0], [76.2, 35946.0], [76.3, 35973.0], [76.4, 36025.0], [76.5, 36071.0], [76.6, 36128.0], [76.7, 36179.0], [76.8, 36187.0], [76.9, 36221.0], [77.0, 36254.0], [77.1, 36286.0], [77.2, 36312.0], [77.3, 36369.0], [77.4, 36436.0], [77.5, 36461.0], [77.6, 36492.0], [77.7, 36527.0], [77.8, 36553.0], [77.9, 36593.0], [78.0, 36621.0], [78.1, 36662.0], [78.2, 36692.0], [78.3, 36707.0], [78.4, 36753.0], [78.5, 36763.0], [78.6, 36794.0], [78.7, 36810.0], [78.8, 36851.0], [78.9, 36888.0], [79.0, 36938.0], [79.1, 36997.0], [79.2, 37032.0], [79.3, 37048.0], [79.4, 37080.0], [79.5, 37106.0], [79.6, 37139.0], [79.7, 37181.0], [79.8, 37245.0], [79.9, 37276.0], [80.0, 37357.0], [80.1, 37478.0], [80.2, 37552.0], [80.3, 37602.0], [80.4, 37644.0], [80.5, 37719.0], [80.6, 37845.0], [80.7, 37941.0], [80.8, 37974.0], [80.9, 38070.0], [81.0, 38106.0], [81.1, 38239.0], [81.2, 38305.0], [81.3, 38404.0], [81.4, 38494.0], [81.5, 38565.0], [81.6, 38643.0], [81.7, 38746.0], [81.8, 38794.0], [81.9, 38877.0], [82.0, 38910.0], [82.1, 39017.0], [82.2, 39076.0], [82.3, 39127.0], [82.4, 39156.0], [82.5, 39197.0], [82.6, 39234.0], [82.7, 39378.0], [82.8, 39450.0], [82.9, 39610.0], [83.0, 39675.0], [83.1, 39782.0], [83.2, 39892.0], [83.3, 39944.0], [83.4, 39973.0], [83.5, 40061.0], [83.6, 40115.0], [83.7, 40324.0], [83.8, 40483.0], [83.9, 40569.0], [84.0, 40665.0], [84.1, 40703.0], [84.2, 40785.0], [84.3, 40839.0], [84.4, 41011.0], [84.5, 41064.0], [84.6, 41236.0], [84.7, 41312.0], [84.8, 41438.0], [84.9, 41658.0], [85.0, 41737.0], [85.1, 41842.0], [85.2, 41886.0], [85.3, 41916.0], [85.4, 41975.0], [85.5, 42081.0], [85.6, 42187.0], [85.7, 42234.0], [85.8, 42271.0], [85.9, 42358.0], [86.0, 42415.0], [86.1, 42458.0], [86.2, 42503.0], [86.3, 42552.0], [86.4, 42622.0], [86.5, 42711.0], [86.6, 42767.0], [86.7, 42802.0], [86.8, 42881.0], [86.9, 42945.0], [87.0, 43067.0], [87.1, 43133.0], [87.2, 43166.0], [87.3, 43182.0], [87.4, 43230.0], [87.5, 43259.0], [87.6, 43346.0], [87.7, 43428.0], [87.8, 43529.0], [87.9, 43552.0], [88.0, 43629.0], [88.1, 43729.0], [88.2, 43882.0], [88.3, 43973.0], [88.4, 44067.0], [88.5, 44260.0], [88.6, 44282.0], [88.7, 44445.0], [88.8, 44515.0], [88.9, 44568.0], [89.0, 44636.0], [89.1, 44746.0], [89.2, 44832.0], [89.3, 45110.0], [89.4, 45203.0], [89.5, 45902.0], [89.6, 46134.0], [89.7, 46357.0], [89.8, 46591.0], [89.9, 46676.0], [90.0, 46874.0], [90.1, 46982.0], [90.2, 47146.0], [90.3, 47194.0], [90.4, 47357.0], [90.5, 47447.0], [90.6, 47549.0], [90.7, 47680.0], [90.8, 47811.0], [90.9, 48106.0], [91.0, 48393.0], [91.1, 48954.0], [91.2, 49162.0], [91.3, 49469.0], [91.4, 49623.0], [91.5, 49937.0], [91.6, 50153.0], [91.7, 50745.0], [91.8, 51035.0], [91.9, 51158.0], [92.0, 51257.0], [92.1, 51795.0], [92.2, 51844.0], [92.3, 51901.0], [92.4, 52075.0], [92.5, 52366.0], [92.6, 52586.0], [92.7, 52754.0], [92.8, 52910.0], [92.9, 52968.0], [93.0, 53003.0], [93.1, 53047.0], [93.2, 53077.0], [93.3, 53172.0], [93.4, 53201.0], [93.5, 53225.0], [93.6, 53272.0], [93.7, 53324.0], [93.8, 53440.0], [93.9, 53592.0], [94.0, 53668.0], [94.1, 53765.0], [94.2, 53954.0], [94.3, 54119.0], [94.4, 54437.0], [94.5, 54522.0], [94.6, 54700.0], [94.7, 54787.0], [94.8, 54821.0], [94.9, 54883.0], [95.0, 54937.0], [95.1, 55898.0], [95.2, 56159.0], [95.3, 56581.0], [95.4, 56937.0], [95.5, 57180.0], [95.6, 58371.0], [95.7, 66882.0], [95.8, 67740.0], [95.9, 68249.0], [96.0, 68858.0], [96.1, 69021.0], [96.2, 69298.0], [96.3, 69398.0], [96.4, 69574.0], [96.5, 70022.0], [96.6, 70344.0], [96.7, 70452.0], [96.8, 70689.0], [96.9, 70874.0], [97.0, 71025.0], [97.1, 71087.0], [97.2, 71237.0], [97.3, 71323.0], [97.4, 71379.0], [97.5, 71490.0], [97.6, 71597.0], [97.7, 71758.0], [97.8, 71832.0], [97.9, 71908.0], [98.0, 71968.0], [98.1, 72078.0], [98.2, 72117.0], [98.3, 72170.0], [98.4, 72191.0], [98.5, 72258.0], [98.6, 72326.0], [98.7, 72362.0], [98.8, 72463.0], [98.9, 72669.0], [99.0, 72832.0], [99.1, 72879.0], [99.2, 72941.0], [99.3, 73215.0], [99.4, 73314.0], [99.5, 73462.0], [99.6, 73546.0], [99.7, 73659.0], [99.8, 73745.0], [99.9, 74068.0], [100.0, 74915.0]], "isOverall": false, "label": "HomePage", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 700.0, "maxY": 508.0, "series": [{"data": [[68300.0, 1.0], [69900.0, 2.0], [71500.0, 3.0], [32900.0, 10.0], [33700.0, 9.0], [34500.0, 14.0], [35300.0, 13.0], [36100.0, 8.0], [36900.0, 7.0], [37700.0, 3.0], [38500.0, 3.0], [40100.0, 3.0], [39300.0, 3.0], [40900.0, 2.0], [41700.0, 4.0], [42500.0, 7.0], [43300.0, 4.0], [44900.0, 2.0], [44100.0, 2.0], [45700.0, 1.0], [46500.0, 3.0], [47300.0, 1.0], [48100.0, 3.0], [48900.0, 1.0], [49700.0, 1.0], [51300.0, 1.0], [52100.0, 2.0], [52900.0, 6.0], [53700.0, 1.0], [54500.0, 2.0], [56100.0, 1.0], [56900.0, 2.0], [67400.0, 1.0], [69000.0, 1.0], [70600.0, 1.0], [72200.0, 5.0], [700.0, 1.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 5.0], [1200.0, 4.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 4.0], [2000.0, 6.0], [2100.0, 7.0], [2300.0, 1.0], [2500.0, 9.0], [2600.0, 5.0], [2700.0, 4.0], [2800.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3300.0, 5.0], [3400.0, 7.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 2.0], [3800.0, 1.0], [4100.0, 2.0], [66500.0, 1.0], [68100.0, 1.0], [4600.0, 2.0], [71300.0, 6.0], [72900.0, 2.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 4.0], [5000.0, 4.0], [5100.0, 2.0], [5300.0, 7.0], [5400.0, 3.0], [5600.0, 3.0], [5800.0, 3.0], [6100.0, 1.0], [5900.0, 2.0], [6000.0, 1.0], [6300.0, 2.0], [6500.0, 2.0], [6800.0, 1.0], [6900.0, 1.0], [7400.0, 1.0], [7900.0, 9.0], [7800.0, 2.0], [7700.0, 5.0], [8000.0, 4.0], [8100.0, 5.0], [8200.0, 7.0], [8400.0, 2.0], [8800.0, 4.0], [9200.0, 4.0], [9000.0, 1.0], [9400.0, 5.0], [9600.0, 3.0], [10000.0, 1.0], [10800.0, 2.0], [11000.0, 1.0], [11200.0, 1.0], [11600.0, 2.0], [11400.0, 1.0], [12200.0, 2.0], [12000.0, 1.0], [12400.0, 4.0], [12600.0, 1.0], [13000.0, 1.0], [13200.0, 1.0], [13800.0, 2.0], [14000.0, 4.0], [14200.0, 2.0], [14400.0, 4.0], [14800.0, 4.0], [14600.0, 2.0], [15200.0, 3.0], [15000.0, 3.0], [15400.0, 6.0], [15800.0, 5.0], [16000.0, 7.0], [16200.0, 4.0], [17200.0, 9.0], [16400.0, 8.0], [16800.0, 15.0], [17600.0, 7.0], [18400.0, 3.0], [18000.0, 3.0], [19200.0, 36.0], [18800.0, 2.0], [19600.0, 31.0], [20000.0, 12.0], [20400.0, 15.0], [21200.0, 47.0], [20800.0, 6.0], [21600.0, 4.0], [22000.0, 3.0], [22400.0, 3.0], [22800.0, 17.0], [23200.0, 6.0], [23600.0, 1.0], [24000.0, 3.0], [24400.0, 5.0], [24800.0, 1.0], [25600.0, 4.0], [26000.0, 6.0], [26400.0, 3.0], [26800.0, 2.0], [27200.0, 5.0], [28400.0, 1.0], [28800.0, 2.0], [29200.0, 3.0], [29600.0, 5.0], [30000.0, 5.0], [30400.0, 9.0], [30800.0, 8.0], [31200.0, 11.0], [31600.0, 12.0], [32000.0, 7.0], [32400.0, 18.0], [32800.0, 18.0], [33600.0, 6.0], [34400.0, 13.0], [35200.0, 7.0], [36000.0, 7.0], [36800.0, 9.0], [37600.0, 6.0], [38400.0, 5.0], [40000.0, 4.0], [40800.0, 3.0], [39200.0, 5.0], [42400.0, 7.0], [41600.0, 2.0], [43200.0, 5.0], [44000.0, 2.0], [44800.0, 2.0], [46400.0, 1.0], [47200.0, 3.0], [48000.0, 2.0], [49600.0, 1.0], [50400.0, 1.0], [51200.0, 2.0], [52000.0, 3.0], [52800.0, 1.0], [53600.0, 5.0], [54400.0, 5.0], [56000.0, 2.0], [67200.0, 1.0], [68800.0, 1.0], [70400.0, 4.0], [72000.0, 4.0], [73600.0, 3.0], [68700.0, 2.0], [70300.0, 2.0], [71900.0, 5.0], [73500.0, 3.0], [33100.0, 9.0], [33900.0, 14.0], [34700.0, 7.0], [35500.0, 5.0], [36300.0, 9.0], [37100.0, 9.0], [37900.0, 6.0], [38700.0, 5.0], [39500.0, 1.0], [40300.0, 1.0], [41900.0, 8.0], [41100.0, 2.0], [42700.0, 7.0], [43500.0, 6.0], [44300.0, 2.0], [45900.0, 2.0], [45100.0, 3.0], [46700.0, 2.0], [49100.0, 4.0], [47500.0, 3.0], [48300.0, 2.0], [49900.0, 2.0], [50700.0, 1.0], [52300.0, 2.0], [53100.0, 4.0], [54700.0, 7.0], [53900.0, 2.0], [56300.0, 1.0], [57100.0, 2.0], [67800.0, 1.0], [69400.0, 1.0], [71000.0, 5.0], [72600.0, 2.0], [71700.0, 5.0], [73300.0, 3.0], [74900.0, 1.0], [16500.0, 5.0], [16900.0, 18.0], [17300.0, 7.0], [18100.0, 4.0], [17700.0, 3.0], [18500.0, 8.0], [18900.0, 4.0], [19300.0, 28.0], [19700.0, 19.0], [20100.0, 16.0], [21300.0, 28.0], [20500.0, 10.0], [20900.0, 2.0], [21700.0, 4.0], [22100.0, 3.0], [22500.0, 32.0], [23300.0, 7.0], [22900.0, 16.0], [23700.0, 3.0], [24100.0, 2.0], [24500.0, 2.0], [24900.0, 2.0], [26100.0, 4.0], [25700.0, 2.0], [26500.0, 1.0], [26900.0, 2.0], [27300.0, 1.0], [27700.0, 3.0], [28100.0, 3.0], [28500.0, 2.0], [28900.0, 2.0], [29300.0, 3.0], [29700.0, 5.0], [30100.0, 12.0], [30500.0, 9.0], [30900.0, 12.0], [31300.0, 15.0], [31700.0, 9.0], [32100.0, 15.0], [32500.0, 13.0], [33000.0, 23.0], [33800.0, 15.0], [34600.0, 10.0], [35400.0, 8.0], [36200.0, 11.0], [37000.0, 13.0], [37800.0, 4.0], [38600.0, 6.0], [39400.0, 4.0], [40200.0, 1.0], [41000.0, 5.0], [41800.0, 6.0], [42600.0, 4.0], [43400.0, 4.0], [44200.0, 5.0], [46600.0, 2.0], [47400.0, 5.0], [49800.0, 1.0], [52200.0, 1.0], [53000.0, 11.0], [54600.0, 1.0], [53800.0, 1.0], [55400.0, 1.0], [56200.0, 2.0], [57000.0, 1.0], [69200.0, 3.0], [70800.0, 4.0], [72400.0, 6.0], [74000.0, 1.0], [69100.0, 1.0], [70700.0, 1.0], [72300.0, 4.0], [73900.0, 2.0], [33300.0, 19.0], [34100.0, 11.0], [34900.0, 7.0], [35700.0, 8.0], [36500.0, 10.0], [37300.0, 4.0], [38100.0, 2.0], [38900.0, 5.0], [39700.0, 3.0], [40500.0, 4.0], [41300.0, 4.0], [42100.0, 5.0], [42900.0, 4.0], [43700.0, 3.0], [44500.0, 5.0], [45300.0, 1.0], [46100.0, 1.0], [46900.0, 2.0], [47700.0, 3.0], [50100.0, 1.0], [50900.0, 1.0], [52500.0, 2.0], [51700.0, 2.0], [54100.0, 1.0], [53300.0, 4.0], [54900.0, 4.0], [56500.0, 1.0], [57300.0, 1.0], [58100.0, 1.0], [68200.0, 1.0], [71400.0, 3.0], [73000.0, 1.0], [68900.0, 2.0], [70500.0, 2.0], [72100.0, 10.0], [73700.0, 4.0], [8300.0, 8.0], [8500.0, 4.0], [9100.0, 4.0], [8900.0, 2.0], [9300.0, 1.0], [9500.0, 3.0], [9700.0, 1.0], [10100.0, 1.0], [9900.0, 1.0], [10300.0, 1.0], [10500.0, 4.0], [11100.0, 2.0], [10900.0, 2.0], [11500.0, 3.0], [11300.0, 1.0], [11700.0, 3.0], [12100.0, 2.0], [11900.0, 2.0], [12300.0, 4.0], [12500.0, 1.0], [12700.0, 1.0], [13100.0, 3.0], [13300.0, 2.0], [13500.0, 1.0], [13700.0, 3.0], [13900.0, 2.0], [14300.0, 6.0], [14100.0, 3.0], [14700.0, 4.0], [14500.0, 2.0], [14900.0, 4.0], [15100.0, 6.0], [15300.0, 8.0], [15700.0, 3.0], [15500.0, 4.0], [16300.0, 5.0], [16100.0, 2.0], [15900.0, 4.0], [16600.0, 7.0], [17000.0, 13.0], [17400.0, 6.0], [17800.0, 5.0], [18200.0, 6.0], [18600.0, 5.0], [19000.0, 6.0], [19400.0, 49.0], [19800.0, 10.0], [20200.0, 8.0], [20600.0, 12.0], [21000.0, 508.0], [21400.0, 16.0], [22200.0, 9.0], [21800.0, 2.0], [22600.0, 49.0], [23000.0, 11.0], [23400.0, 4.0], [23800.0, 2.0], [24200.0, 3.0], [25000.0, 1.0], [25400.0, 4.0], [25800.0, 3.0], [27000.0, 3.0], [27400.0, 2.0], [27800.0, 3.0], [28200.0, 2.0], [28600.0, 2.0], [29400.0, 2.0], [29000.0, 3.0], [30200.0, 2.0], [30600.0, 2.0], [31000.0, 4.0], [31400.0, 9.0], [31800.0, 14.0], [32200.0, 8.0], [32600.0, 12.0], [33200.0, 13.0], [34000.0, 15.0], [34800.0, 11.0], [35600.0, 8.0], [36400.0, 9.0], [37200.0, 6.0], [38000.0, 5.0], [38800.0, 4.0], [40400.0, 3.0], [39600.0, 5.0], [42800.0, 4.0], [42000.0, 2.0], [41200.0, 3.0], [44400.0, 4.0], [43600.0, 6.0], [45200.0, 1.0], [46800.0, 3.0], [46000.0, 1.0], [47600.0, 2.0], [48400.0, 1.0], [49200.0, 1.0], [50000.0, 2.0], [50800.0, 1.0], [51600.0, 1.0], [53200.0, 9.0], [54000.0, 3.0], [54800.0, 5.0], [66400.0, 1.0], [71200.0, 3.0], [72800.0, 8.0], [74400.0, 1.0], [69500.0, 3.0], [71100.0, 2.0], [72700.0, 1.0], [74300.0, 1.0], [33500.0, 15.0], [34300.0, 10.0], [35900.0, 8.0], [36700.0, 15.0], [35100.0, 2.0], [37500.0, 5.0], [38300.0, 3.0], [39100.0, 10.0], [39900.0, 9.0], [40700.0, 5.0], [42300.0, 4.0], [41500.0, 1.0], [43100.0, 11.0], [43900.0, 4.0], [44700.0, 5.0], [45500.0, 1.0], [47100.0, 5.0], [46300.0, 2.0], [48700.0, 1.0], [49500.0, 1.0], [50300.0, 1.0], [51100.0, 3.0], [51900.0, 1.0], [52700.0, 3.0], [53500.0, 3.0], [56700.0, 1.0], [58300.0, 1.0], [67000.0, 1.0], [70200.0, 2.0], [71800.0, 4.0], [73400.0, 2.0], [67700.0, 1.0], [69300.0, 3.0], [16700.0, 14.0], [17100.0, 15.0], [18300.0, 6.0], [17900.0, 4.0], [18700.0, 2.0], [19100.0, 13.0], [19500.0, 53.0], [19900.0, 11.0], [20300.0, 11.0], [20700.0, 4.0], [21500.0, 3.0], [21100.0, 165.0], [22300.0, 4.0], [21900.0, 1.0], [22700.0, 44.0], [23100.0, 12.0], [23500.0, 4.0], [24300.0, 1.0], [24700.0, 4.0], [25500.0, 3.0], [25900.0, 2.0], [26300.0, 1.0], [26700.0, 1.0], [27500.0, 2.0], [27100.0, 2.0], [27900.0, 2.0], [28700.0, 3.0], [29100.0, 2.0], [29500.0, 3.0], [29900.0, 5.0], [30300.0, 3.0], [30700.0, 3.0], [31100.0, 7.0], [31500.0, 16.0], [31900.0, 9.0], [32300.0, 15.0], [32700.0, 8.0], [33400.0, 13.0], [34200.0, 11.0], [35000.0, 13.0], [36600.0, 10.0], [35800.0, 10.0], [37400.0, 4.0], [38200.0, 5.0], [39000.0, 5.0], [39800.0, 3.0], [40600.0, 5.0], [43000.0, 4.0], [42200.0, 7.0], [41400.0, 3.0], [44600.0, 4.0], [43800.0, 2.0], [46200.0, 2.0], [47000.0, 2.0], [47800.0, 1.0], [49400.0, 3.0], [51000.0, 3.0], [50200.0, 1.0], [51800.0, 6.0], [52600.0, 2.0], [53400.0, 3.0], [54200.0, 1.0], [55800.0, 2.0], [56600.0, 1.0], [66800.0, 1.0], [71600.0, 1.0], [73200.0, 4.0], [70000.0, 1.0]], "isOverall": false, "label": "HomePage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 74900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2089.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 12.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2089.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1365.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1033.7925867507884, "minX": 1.59348726E12, "maxY": 1599.6677419354844, "series": [{"data": [[1.59348726E12, 1599.6677419354844], [1.59348732E12, 1033.7925867507884]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59348732E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1136.0, "minX": 2.0, "maxY": 74915.0, "series": [{"data": [[2.0, 54037.0], [3.0, 53068.0], [4.0, 53064.0], [5.0, 54883.0], [6.0, 53592.0], [7.0, 53041.0], [9.0, 54681.5], [10.0, 54937.0], [11.0, 54933.0], [12.0, 52366.0], [13.0, 54913.0], [14.0, 56058.0], [15.0, 53691.0], [17.0, 54620.5], [18.0, 74915.0], [21.0, 54441.5], [22.0, 54649.0], [23.0, 53668.0], [24.0, 54821.0], [25.0, 52910.0], [26.0, 54799.0], [27.0, 51899.0], [29.0, 32530.0], [30.0, 54509.5], [33.0, 29102.0], [32.0, 53677.5], [35.0, 28515.0], [34.0, 52834.0], [37.0, 51849.0], [36.0, 54737.0], [39.0, 32476.0], [38.0, 33269.0], [41.0, 55898.0], [40.0, 53342.0], [43.0, 41120.0], [47.0, 47833.5], [49.0, 52444.5], [51.0, 53280.0], [50.0, 52754.0], [53.0, 31124.0], [52.0, 33539.0], [54.0, 33293.0], [57.0, 53440.0], [56.0, 42430.5], [59.0, 27962.666666666664], [61.0, 27171.5], [60.0, 52666.0], [62.0, 17150.5], [63.0, 1136.0], [64.0, 13062.142857142855], [67.0, 21440.0], [65.0, 30516.0], [71.0, 33340.0], [70.0, 53056.0], [69.0, 53324.0], [68.0, 53080.0], [75.0, 53002.0], [74.0, 53272.0], [73.0, 53213.0], [72.0, 53262.0], [78.0, 53225.0], [77.0, 53176.0], [76.0, 52987.0], [82.0, 1203.0], [83.0, 53042.0], [81.0, 54560.0], [80.0, 53136.5], [87.0, 53087.0], [86.0, 53201.0], [85.0, 53265.0], [91.0, 54418.0], [90.0, 53765.0], [89.0, 41855.0], [95.0, 53047.0], [94.0, 52968.0], [93.0, 54098.0], [92.0, 53003.0], [99.0, 52977.0], [98.0, 31309.0], [97.0, 53027.0], [96.0, 31810.0], [103.0, 54098.0], [102.0, 54119.0], [101.0, 30742.0], [100.0, 53364.0], [104.0, 16494.5], [106.0, 6986.666666666666], [105.0, 32553.0], [108.0, 12083.5], [111.0, 1832.0], [110.0, 32012.5], [115.0, 2021.0], [114.0, 53676.0], [113.0, 30935.0], [112.0, 43601.0], [119.0, 53599.0], [118.0, 43001.0], [116.0, 42225.0], [121.0, 2140.0], [123.0, 32501.0], [122.0, 39163.666666666664], [127.0, 32454.0], [126.0, 53408.0], [125.0, 31999.0], [124.0, 32302.0], [131.0, 9598.5], [133.0, 17254.5], [134.0, 32457.0], [132.0, 53661.0], [130.0, 31599.0], [129.0, 31885.0], [128.0, 54633.0], [137.0, 7043.0], [138.0, 8132.4], [142.0, 73615.0], [141.0, 32870.0], [140.0, 31648.0], [139.0, 33288.0], [136.0, 32108.0], [151.0, 31449.0], [149.0, 54094.0], [148.0, 33024.0], [147.0, 33079.0], [146.0, 32336.0], [145.0, 32006.0], [144.0, 52759.0], [159.0, 32810.0], [158.0, 73240.0], [157.0, 31789.0], [156.0, 43462.5], [154.0, 31887.0], [153.0, 31558.0], [152.0, 73704.0], [165.0, 26131.5], [164.0, 31258.0], [163.0, 32617.0], [162.0, 73931.0], [161.0, 73994.0], [160.0, 32327.0], [170.0, 17802.5], [174.0, 73656.5], [172.0, 73708.0], [171.0, 72883.0], [169.0, 31439.0], [168.0, 66575.66666666667], [177.0, 12438.0], [179.0, 12619.0], [180.0, 16807.2], [181.0, 26030.0], [182.0, 14481.666666666668], [183.0, 32159.0], [178.0, 73711.0], [176.0, 52487.0], [187.0, 17189.0], [191.0, 72485.0], [190.0, 72429.0], [189.0, 32843.0], [188.0, 73314.0], [186.0, 73462.0], [185.0, 73367.0], [184.0, 73539.0], [193.0, 38002.0], [198.0, 32156.0], [197.0, 72879.0], [196.0, 72950.0], [195.0, 73064.0], [194.0, 48954.0], [192.0, 73318.0], [207.0, 72669.0], [206.0, 31512.0], [205.0, 72801.0], [204.0, 72770.0], [203.0, 72837.0], [202.0, 72850.0], [201.0, 72151.0], [200.0, 52698.5], [215.0, 72329.0], [214.0, 72225.0], [213.0, 72326.0], [212.0, 72362.0], [211.0, 52105.0], [209.0, 72463.0], [208.0, 48408.0], [221.0, 3259.0], [223.0, 71908.0], [222.0, 71950.33333333333], [219.0, 48393.0], [218.0, 71933.0], [217.0, 72152.0], [216.0, 48158.0], [229.0, 20350.75], [230.0, 37408.0], [231.0, 71323.0], [228.0, 71490.0], [227.0, 71597.0], [226.0, 71758.0], [224.0, 71832.0], [234.0, 37305.5], [235.0, 37167.0], [236.0, 25855.5], [237.0, 37291.0], [239.0, 25631.5], [238.0, 47516.0], [233.0, 71302.0], [232.0, 71379.0], [241.0, 12365.4], [243.0, 14547.25], [244.0, 18380.0], [247.0, 25379.0], [246.0, 47180.0], [245.0, 48039.0], [242.0, 70899.0], [240.0, 48716.0], [250.0, 7115.229166666665], [255.0, 46982.0], [254.0, 47752.0], [253.0, 59279.0], [251.0, 47772.0], [248.0, 47550.0], [270.0, 47253.0], [271.0, 46411.0], [269.0, 46609.0], [268.0, 74459.0], [267.0, 47357.0], [266.0, 70022.0], [265.0, 46981.0], [263.0, 47445.0], [258.0, 46888.0], [257.0, 47614.5], [262.0, 46782.0], [261.0, 30146.0], [260.0, 58986.0], [286.0, 46591.0], [277.0, 27146.0], [276.0, 47031.0], [279.0, 29533.0], [273.0, 47490.0], [272.0, 74327.0], [275.0, 47062.0], [274.0, 47447.0], [278.0, 31520.0], [287.0, 27325.0], [285.0, 32355.0], [284.0, 47146.0], [283.0, 74068.0], [282.0, 33793.0], [281.0, 30446.0], [280.0, 47297.0], [301.0, 46228.0], [297.0, 19033.0], [289.0, 27391.5], [298.0, 19254.0], [303.0, 52206.5], [300.0, 30177.0], [291.0, 46860.0], [290.0, 30983.0], [299.0, 46597.0], [296.0, 46335.0], [295.0, 73218.0], [288.0, 30454.0], [294.0, 30612.0], [292.0, 30172.0], [318.0, 31270.0], [319.0, 31555.0], [317.0, 72290.0], [316.0, 31623.0], [315.0, 30555.0], [314.0, 43921.0], [313.0, 45071.0], [310.0, 51514.5], [307.0, 72473.0], [306.0, 31765.0], [305.0, 30200.0], [304.0, 31479.0], [308.0, 31400.0], [335.0, 72291.0], [333.0, 72111.0], [331.0, 43529.0], [330.0, 72100.0], [329.0, 32643.0], [328.0, 72170.0], [327.0, 72172.0], [326.0, 72194.66666666667], [323.0, 31268.0], [322.0, 72059.0], [321.0, 72117.0], [320.0, 32104.0], [350.0, 50619.5], [351.0, 71758.0], [348.0, 43230.0], [339.0, 30984.0], [338.0, 51842.0], [337.0, 72026.0], [347.0, 31506.0], [346.0, 71859.0], [345.0, 32048.0], [343.0, 51888.5], [341.0, 72267.0], [340.0, 72258.0], [367.0, 48748.666666666664], [364.0, 52571.0], [362.0, 32628.666666666668], [359.0, 31138.5], [357.0, 32689.0], [356.0, 52945.333333333336], [353.0, 31690.5], [380.0, 42910.0], [383.0, 56691.0], [379.0, 50160.0], [381.0, 43025.0], [377.0, 71002.0], [376.0, 56903.0], [374.0, 71334.0], [369.0, 71459.0], [368.0, 32698.0], [371.0, 71379.0], [370.0, 33985.0], [373.0, 32899.0], [372.0, 72078.0], [397.0, 42802.0], [398.0, 19848.5], [396.0, 43015.0], [387.0, 43510.0], [386.0, 56697.5], [384.0, 71101.0], [394.0, 42881.0], [393.0, 31890.0], [392.0, 42783.0], [391.0, 71087.0], [390.0, 42472.0], [389.0, 42419.0], [388.0, 42966.0], [413.0, 42358.0], [414.0, 70879.0], [412.0, 42189.0], [403.0, 70344.0], [402.0, 71378.0], [401.0, 42655.0], [400.0, 56570.0], [411.0, 42371.0], [410.0, 70409.0], [409.0, 70535.0], [408.0, 70537.0], [407.0, 70434.0], [406.0, 70221.0], [405.0, 70464.0], [404.0, 31597.0], [430.0, 69351.0], [420.0, 40274.333333333336], [431.0, 69441.0], [429.0, 42585.0], [418.0, 42234.0], [417.0, 61442.666666666664], [427.0, 41886.0], [426.0, 41748.0], [425.0, 43342.5], [423.0, 41920.0], [422.0, 42458.0], [421.0, 41658.0], [446.0, 69021.0], [435.0, 24742.5], [447.0, 41449.0], [445.0, 69368.5], [443.0, 68931.0], [442.0, 41438.0], [441.0, 69286.5], [439.0, 55753.0], [432.0, 69968.0], [434.0, 69398.0], [433.0, 41662.0], [437.0, 43178.0], [436.0, 69285.0], [462.0, 43729.0], [463.0, 40908.0], [461.0, 39923.0], [460.0, 39944.0], [459.0, 41038.0], [458.0, 39973.0], [457.0, 42457.0], [456.0, 42552.0], [455.0, 69115.5], [451.0, 68952.0], [450.0, 41382.0], [449.0, 69145.5], [453.0, 55056.5], [477.0, 28026.0], [479.0, 55490.0], [476.0, 39408.0], [467.0, 41882.0], [466.0, 50018.666666666664], [475.0, 43428.0], [474.0, 68717.0], [473.0, 43801.0], [472.0, 53888.0], [470.0, 41737.0], [469.0, 43902.0], [468.0, 43627.0], [494.0, 39184.0], [495.0, 39976.0], [493.0, 39277.0], [492.0, 42503.0], [491.0, 39234.0], [490.0, 67284.0], [489.0, 38794.0], [488.0, 39686.0], [487.0, 67440.0], [480.0, 68249.0], [483.0, 39949.0], [482.0, 39663.5], [486.0, 40557.0], [485.0, 38899.0], [484.0, 40719.0], [510.0, 40764.0], [496.0, 25145.5], [511.0, 66882.0], [509.0, 39251.0], [498.0, 66593.0], [497.0, 42190.0], [507.0, 37870.666666666664], [504.0, 52969.0], [502.0, 66422.0], [501.0, 41132.0], [500.0, 39594.0], [542.0, 35849.0], [514.0, 40646.5], [512.0, 40703.0], [518.0, 37611.0], [526.0, 36763.0], [522.0, 40136.0], [528.0, 39138.0], [530.0, 39740.0], [532.0, 39495.0], [534.0, 39543.0], [540.0, 38373.0], [538.0, 36095.0], [536.0, 37273.0], [546.0, 37212.0], [568.0, 37552.0], [574.0, 36593.0], [560.0, 36997.0], [562.0, 36458.5], [544.0, 37806.0], [550.0, 35600.0], [558.0, 37061.0], [556.0, 36131.0], [554.0, 37153.0], [552.0, 37328.0], [566.0, 35973.0], [564.0, 36833.0], [580.0, 36396.0], [600.0, 34198.0], [578.0, 36799.0], [582.0, 38565.0], [590.0, 34225.0], [588.0, 34816.0], [586.0, 34358.0], [594.0, 58186.0], [596.0, 36851.0], [604.0, 33859.0], [602.0, 45655.0], [598.0, 33853.0], [636.0, 21609.5], [624.0, 56581.0], [626.0, 36775.0], [628.0, 56744.0], [638.0, 34449.0], [634.0, 33830.0], [632.0, 36537.0], [608.0, 56699.0], [610.0, 35807.0], [612.0, 33698.0], [620.0, 33266.0], [664.0, 32943.0], [670.0, 32833.0], [656.0, 55435.0], [658.0, 33972.0], [668.0, 35066.666666666664], [640.0, 33422.0], [642.0, 45546.5], [644.0, 56159.0], [646.0, 56037.0], [654.0, 34098.0], [652.0, 33400.0], [650.0, 34498.0], [648.0, 55882.0], [662.0, 34905.0], [660.0, 33309.0], [674.0, 22252.5], [676.0, 17644.333333333332], [678.0, 34770.0], [696.0, 21795.5], [672.0, 34586.0], [686.0, 22506.5], [684.0, 22009.0], [682.0, 15203.0], [680.0, 22426.0], [692.0, 17630.0], [694.0, 22126.5], [688.0, 22209.5], [690.0, 21706.5], [700.0, 17074.333333333332], [698.0, 21959.0], [702.0, 17157.666666666668], [720.0, 21060.5], [722.0, 20864.5], [724.0, 33303.0], [726.0, 33086.0], [734.0, 32427.0], [732.0, 32943.5], [730.0, 33018.0], [728.0, 33082.0], [710.0, 20851.5], [708.0, 20829.5], [706.0, 21572.0], [704.0, 33551.0], [718.0, 21285.0], [716.0, 21248.0], [714.0, 20325.5], [712.0, 20919.0], [762.0, 31819.0], [744.0, 32606.0], [746.0, 33144.0], [750.0, 32293.0], [766.0, 54700.0], [752.0, 32211.0], [754.0, 32405.0], [756.0, 31848.0], [764.0, 32180.0], [760.0, 32493.5], [742.0, 32623.0], [740.0, 33369.0], [738.0, 33125.5], [736.0, 32888.0], [758.0, 31971.0], [796.0, 30761.0], [784.0, 31160.0], [786.0, 31141.0], [788.0, 31307.0], [798.0, 30498.0], [794.0, 30863.0], [792.0, 30947.0], [768.0, 32088.5], [772.0, 31934.0], [782.0, 31297.0], [780.0, 31730.0], [778.0, 31544.0], [776.0, 31859.0], [790.0, 30936.0], [824.0, 46247.0], [828.0, 29093.0], [818.0, 29659.0], [820.0, 29439.0], [830.0, 46048.0], [826.0, 29284.0], [800.0, 30407.0], [802.0, 30199.0], [804.0, 30181.0], [806.0, 52569.0], [814.0, 42729.0], [808.0, 52128.0], [822.0, 51844.0], [832.0, 51378.0], [860.0, 50745.0], [840.0, 46874.0], [842.0, 51257.0], [844.0, 51061.0], [836.0, 52048.5], [834.0, 32529.0], [846.0, 50874.0], [848.0, 44832.0], [850.0, 45143.0], [852.0, 50259.0], [854.0, 48584.5], [862.0, 47823.5], [858.0, 36939.0], [856.0, 51056.0], [866.0, 46276.333333333336], [892.0, 49130.0], [876.0, 50153.0], [874.0, 45203.0], [872.0, 43560.666666666664], [878.0, 49469.0], [880.0, 44876.0], [882.0, 49623.0], [884.0, 46522.0], [894.0, 43098.0], [870.0, 36362.0], [868.0, 44333.0], [886.0, 44267.0], [922.0, 21002.0], [920.0, 21010.0], [926.0, 43629.0], [912.0, 21006.0], [914.0, 35221.0], [924.0, 21010.5], [898.0, 43507.0], [900.0, 43537.0], [902.0, 35331.0], [910.0, 21012.0], [908.0, 21009.0], [906.0, 44515.0], [904.0, 44517.0], [918.0, 43605.0], [916.0, 42630.0], [956.0, 42767.0], [946.0, 21011.5], [948.0, 21002.0], [958.0, 42610.0], [954.0, 42788.0], [952.0, 21003.0], [930.0, 42676.0], [932.0, 21014.5], [940.0, 21011.5], [938.0, 21006.0], [936.0, 21010.0], [950.0, 42009.0], [986.0, 21001.0], [988.0, 19679.666666666668], [984.0, 21002.0], [960.0, 43252.0], [962.0, 34828.0], [964.0, 43141.0], [966.0, 32018.0], [974.0, 21012.0], [970.0, 21009.0], [982.0, 21016.333333333332], [980.0, 21002.0], [978.0, 21009.5], [976.0, 21012.0], [1022.0, 21014.0], [1008.0, 19784.714285714286], [1010.0, 42303.0], [1012.0, 40839.0], [1020.0, 21013.333333333332], [1018.0, 21018.0], [1016.0, 31484.5], [1006.0, 28164.0], [992.0, 21007.0], [994.0, 41421.0], [996.0, 41340.0], [998.0, 41304.0], [1002.0, 41265.0], [1000.0, 41999.5], [1014.0, 21011.0], [1080.0, 33301.0], [1084.0, 19237.0], [1056.0, 42257.0], [1060.0, 41842.0], [1064.0, 43805.0], [1076.0, 19197.666666666668], [1072.0, 19215.0], [1036.0, 31551.25], [1028.0, 21011.0], [1024.0, 21009.0], [1052.0, 21013.0], [1044.0, 21008.0], [1040.0, 21028.833333333332], [1068.0, 29550.5], [1088.0, 44996.0], [1144.0, 35871.0], [1104.0, 31749.333333333332], [1108.0, 44067.0], [1112.0, 42233.5], [1092.0, 29960.5], [1096.0, 44623.0], [1100.0, 40880.333333333336], [1116.0, 44208.0], [1120.0, 38769.0], [1124.0, 41246.0], [1128.0, 40649.5], [1132.0, 43166.0], [1148.0, 41053.0], [1140.0, 35963.0], [1136.0, 37478.0], [1156.0, 34908.0], [1200.0, 37845.0], [1212.0, 36888.0], [1184.0, 35922.0], [1180.0, 38877.0], [1160.0, 35156.5], [1164.0, 39892.0], [1176.0, 33705.333333333336], [1172.0, 37639.0], [1168.0, 38868.0], [1188.0, 36386.5], [1268.0, 35625.0], [1276.0, 34822.0], [1248.0, 35756.0], [1252.0, 36209.0], [1264.0, 35603.5], [1228.0, 36753.0], [1224.0, 36804.0], [1216.0, 37040.0], [1244.0, 36674.0], [1240.0, 36312.0], [1236.0, 36153.0], [1232.0, 37181.0], [1260.0, 35921.0], [1340.0, 32259.0], [1332.0, 37048.0], [1316.0, 19333.0], [1324.0, 24976.5], [1320.0, 33247.0], [1312.0, 33625.0], [1336.0, 32499.0], [1328.0, 32812.0], [1280.0, 35319.0], [1284.0, 34475.0], [1288.0, 34846.0], [1292.0, 34004.0], [1308.0, 33946.0], [1304.0, 34080.0], [1300.0, 34178.0], [1296.0, 34290.0], [1400.0, 23034.4], [1376.0, 14726.0], [1380.0, 23906.0], [1384.0, 21014.666666666668], [1388.0, 24229.0], [1396.0, 23014.666666666668], [1392.0, 24723.714285714286], [1344.0, 35777.0], [1348.0, 14801.0], [1352.0, 25173.0], [1356.0, 14582.0], [1372.0, 24465.0], [1368.0, 24849.0], [1364.0, 25211.0], [1360.0, 25304.0], [1460.0, 21500.199999999997], [1464.0, 30898.0], [1468.0, 16414.0], [1444.0, 32058.0], [1448.0, 32127.5], [1452.0, 22661.714285714286], [1456.0, 31688.0], [1408.0, 28063.5], [1412.0, 23736.0], [1416.0, 26413.0], [1436.0, 22237.000000000004], [1432.0, 25432.0], [1428.0, 32839.0], [1424.0, 27769.0], [1504.0, 29720.0], [1516.0, 22396.333333333332], [1512.0, 20517.526315789473], [1508.0, 30070.0], [1532.0, 28819.0], [1528.0, 28257.0], [1524.0, 29109.0], [1520.0, 29276.0], [1480.0, 21983.272727272728], [1476.0, 31390.0], [1472.0, 31451.0], [1500.0, 21145.0], [1496.0, 30512.0], [1492.0, 22057.2], [1488.0, 31007.0], [1536.0, 22676.0], [1548.0, 17930.833333333332], [1544.0, 17366.4], [1540.0, 18989.0], [1564.0, 27555.0], [1560.0, 27135.0], [1556.0, 28117.0], [1552.0, 18572.5], [1572.0, 27403.0], [1576.0, 21589.5], [1580.0, 21557.0], [1596.0, 25956.0], [1592.0, 21055.0], [1608.0, 21024.0], [1660.0, 21024.0], [1600.0, 21057.0], [1604.0, 26435.0], [1612.0, 21111.5], [1628.0, 21148.0], [1624.0, 21185.5], [1620.0, 21177.5], [1632.0, 21084.0], [1652.0, 25755.0], [1644.0, 21069.666666666668], [1716.0, 21103.0], [1708.0, 21033.0], [1724.0, 21150.0], [1720.0, 21124.0], [1712.0, 25623.0], [1664.0, 21080.0], [1668.0, 21063.5], [1672.0, 21043.0], [1692.0, 21051.0], [1688.0, 21052.0], [1756.0, 14902.0], [1752.0, 16198.0], [1784.0, 15880.0], [1844.0, 21382.5], [1832.0, 21369.0], [1792.0, 26418.0], [1820.0, 25740.0], [1816.0, 21246.0], [1812.0, 21317.0], [1824.0, 21339.0], [1828.0, 21424.0], [1840.0, 21401.0], [1804.0, 21310.0], [1800.0, 21283.5], [1796.0, 21210.5], [1836.0, 21431.0], [1864.0, 21108.5], [1868.0, 21182.0], [1860.0, 16846.0], [1904.0, 25570.0], [1880.0, 21145.0], [1872.0, 21161.5], [1856.0, 20732.928571428572], [1884.0, 21114.88888888889], [1900.0, 20331.0], [1924.0, 19856.0], [1928.0, 19079.666666666668], [1920.0, 19873.0], [1944.0, 19693.0], [1936.0, 24440.0], [1952.0, 19751.0], [1956.0, 24055.0], [1960.0, 19725.0], [1964.0, 19403.0], [1976.0, 19577.0], [1972.0, 19616.0], [2012.0, 19730.0], [1988.0, 24770.0], [2004.0, 24774.0], [2000.0, 19401.0], [2008.0, 19708.0], [1992.0, 19668.14285714286], [2036.0, 19455.0], [2040.0, 24128.5], [2020.0, 15388.6], [2024.0, 24311.5], [2016.0, 19676.0], [2044.0, 23773.0], [2144.0, 19173.0], [2128.0, 20513.0], [2104.0, 21155.5], [2096.0, 21620.5], [2064.0, 22328.0], [2048.0, 23562.0], [2152.0, 18817.0], [2120.0, 20830.0], [2136.0, 20203.0], [2200.0, 17335.0], [2280.0, 19156.0], [2272.0, 14663.0], [2240.0, 15940.0], [2248.0, 15504.0], [2264.0, 16681.0], [2192.0, 10220.25], [2184.0, 18541.0], [2176.0, 10254.8], [2232.0, 16123.0], [2224.0, 16583.5], [2216.0, 17039.0], [2208.0, 17497.0], [2288.0, 18613.0], [2296.0, 15878.0], [2304.0, 16478.0], [2065.0, 22294.0], [2153.0, 19462.0], [2057.0, 22926.5], [2073.0, 22694.5], [2105.0, 21322.0], [2097.0, 20889.0], [2081.0, 22134.333333333332], [2145.0, 19865.0], [2113.0, 20834.5], [2121.0, 20361.0], [2129.0, 20468.0], [2137.0, 20149.0], [2273.0, 16565.0], [2281.0, 15856.0], [2241.0, 15987.0], [2249.0, 17872.0], [2257.0, 15356.5], [2265.0, 18524.0], [2201.0, 17862.0], [2193.0, 18298.0], [2185.0, 17677.0], [2177.0, 13403.0], [2225.0, 18749.0], [2217.0, 16657.0], [2209.0, 19690.0], [2297.0, 17861.0], [1037.0, 11929.0], [1081.0, 19198.0], [1025.0, 21005.0], [1029.0, 21014.0], [1033.0, 21000.5], [1045.0, 21006.5], [1041.0, 40595.0], [1057.0, 42038.0], [1061.0, 41904.0], [1065.0, 21019.5], [1085.0, 19224.0], [1077.0, 19180.0], [1073.0, 19198.5], [1069.0, 19209.0], [1089.0, 39395.0], [1145.0, 35652.0], [1101.0, 30648.333333333332], [1105.0, 28443.5], [1109.0, 42352.5], [1113.0, 38106.0], [1093.0, 19232.0], [1097.0, 29905.5], [1117.0, 38746.0], [1137.0, 41982.0], [1121.0, 38654.0], [1125.0, 43067.0], [1129.0, 43426.0], [1133.0, 36611.8], [1149.0, 35486.0], [1141.0, 35890.0], [1205.0, 37633.0], [1185.0, 38643.0], [1193.0, 38256.0], [1209.0, 37316.5], [1201.0, 37719.0], [1165.0, 34547.0], [1161.0, 38039.0], [1157.0, 34732.0], [1153.0, 36938.5], [1181.0, 38657.0], [1173.0, 39017.0], [1197.0, 36877.333333333336], [1273.0, 35134.0], [1249.0, 36492.0], [1253.0, 36186.0], [1257.0, 35992.5], [1277.0, 35044.0], [1269.0, 36047.0], [1265.0, 35462.0], [1221.0, 36950.0], [1217.0, 37032.0], [1229.0, 36662.0], [1245.0, 35887.0], [1241.0, 36187.0], [1237.0, 36938.0], [1233.0, 37047.0], [1261.0, 35294.0], [1329.0, 32786.0], [1337.0, 36909.0], [1321.0, 37644.0], [1317.0, 37845.0], [1313.0, 33603.0], [1333.0, 37032.0], [1281.0, 34879.0], [1285.0, 34635.0], [1289.0, 34528.0], [1293.0, 34283.0], [1309.0, 33896.0], [1305.0, 34016.0], [1297.0, 34247.0], [1401.0, 22809.666666666668], [1397.0, 22923.285714285714], [1381.0, 13906.0], [1377.0, 27717.333333333332], [1405.0, 26969.0], [1385.0, 24314.5], [1389.0, 23951.0], [1393.0, 13345.0], [1345.0, 36251.0], [1349.0, 31036.0], [1353.0, 25514.5], [1357.0, 28958.666666666668], [1373.0, 24433.0], [1369.0, 24506.0], [1361.0, 25366.5], [1469.0, 26269.666666666668], [1465.0, 22108.4], [1441.0, 32263.0], [1445.0, 31467.0], [1449.0, 23644.833333333336], [1453.0, 21365.2972972973], [1461.0, 21702.6875], [1457.0, 24520.0], [1409.0, 33307.0], [1413.0, 25314.5], [1417.0, 33012.0], [1421.0, 23466.42424242424], [1437.0, 21690.388888888887], [1433.0, 25054.333333333332], [1429.0, 26324.333333333332], [1425.0, 24437.666666666664], [1529.0, 28191.0], [1525.0, 28964.0], [1533.0, 27970.0], [1517.0, 20861.0], [1513.0, 22896.0], [1509.0, 30052.0], [1505.0, 30197.0], [1521.0, 19810.499999999996], [1485.0, 22350.800000000003], [1481.0, 21199.48275862069], [1477.0, 31332.0], [1473.0, 21820.272727272728], [1501.0, 23617.333333333332], [1497.0, 30306.0], [1493.0, 30166.0], [1489.0, 21116.875], [1537.0, 18087.166666666664], [1549.0, 22531.0], [1573.0, 27295.0], [1541.0, 22724.0], [1565.0, 26700.0], [1561.0, 26953.0], [1557.0, 27151.0], [1553.0, 17957.11111111111], [1585.0, 26508.5], [1545.0, 22660.0], [1589.0, 26092.0], [1569.0, 27210.0], [1577.0, 26411.0], [1597.0, 21029.0], [1593.0, 21068.0], [1609.0, 21141.0], [1601.0, 21071.0], [1621.0, 21083.0], [1641.0, 21075.5], [1657.0, 21028.0], [1713.0, 21008.0], [1697.0, 21040.8], [1721.0, 21139.5], [1709.0, 21020.0], [1701.0, 21042.0], [1665.0, 21104.0], [1673.0, 21052.0], [1677.0, 21025.666666666668], [1693.0, 21055.0], [1789.0, 16291.0], [1821.0, 20861.5], [1793.0, 15962.0], [1817.0, 21256.0], [1813.0, 21243.0], [1809.0, 22462.25], [1825.0, 21366.0], [1829.0, 21469.0], [1833.0, 21386.0], [1801.0, 21279.0], [1837.0, 21333.0], [1865.0, 21149.0], [1861.0, 20780.0], [1905.0, 24915.0], [1881.0, 21171.0], [1873.0, 21116.5], [1885.0, 21085.5], [1857.0, 21053.0], [1893.0, 21012.5], [1897.0, 21045.0], [1901.0, 21041.0], [1917.0, 20356.0], [1913.0, 20274.0], [1921.0, 19880.0], [1925.0, 19867.0], [1949.0, 20043.5], [1945.0, 24298.0], [1941.0, 19655.333333333332], [1937.0, 24420.0], [1953.0, 20034.5], [1961.0, 20105.0], [1933.0, 19953.0], [1929.0, 25420.0], [1965.0, 19387.0], [2013.0, 19588.0], [2005.0, 18047.0], [2001.0, 19938.0], [2009.0, 19730.0], [1989.0, 19423.0], [1993.0, 19746.0], [1997.0, 19621.0], [2033.0, 19472.0], [2037.0, 19475.333333333332], [2041.0, 23448.0], [2021.0, 24485.0], [2029.0, 19222.0], [2045.0, 23419.0], [2066.0, 22277.0], [2106.0, 20390.0], [2098.0, 20845.0], [2090.0, 21935.0], [2082.0, 22245.0], [2074.0, 22145.0], [2050.0, 23529.5], [2146.0, 19725.0], [2114.0, 21036.0], [2130.0, 19920.0], [2138.0, 20077.0], [2154.0, 19457.0], [2274.0, 18135.0], [2242.0, 16062.0], [2266.0, 16871.0], [2282.0, 19239.0], [2202.0, 17731.0], [2194.0, 11162.333333333334], [2186.0, 18452.0], [2178.0, 18990.0], [2234.0, 16029.5], [2226.0, 19045.0], [2210.0, 17321.0], [2290.0, 18663.0], [2147.0, 19105.0], [2075.0, 22702.0], [2059.0, 16876.0], [2099.0, 21163.0], [2091.0, 22068.0], [2083.0, 22289.0], [2115.0, 20811.0], [2131.0, 19860.0], [2139.0, 20118.0], [2171.0, 16578.235294117647], [2155.0, 18811.0], [2299.0, 16586.5], [2283.0, 14048.0], [2243.0, 17973.0], [2251.0, 15519.0], [2259.0, 16705.0], [2267.0, 18549.0], [2275.0, 17369.0], [2203.0, 17821.0], [2195.0, 17152.0], [2187.0, 13215.0], [2179.0, 13638.5], [2235.0, 16086.0], [2227.0, 19014.0], [2211.0, 18216.0], [2291.0, 16469.0], [2307.0, 17301.0], [519.0, 22726.0], [539.0, 36496.0], [527.0, 23077.5], [517.0, 39845.0], [525.0, 38522.5], [523.0, 39675.0], [521.0, 37672.0], [529.0, 39782.0], [531.0, 36450.0], [535.0, 37490.0], [541.0, 38227.0], [537.0, 37253.0], [571.0, 35624.0], [575.0, 35983.0], [563.0, 36822.0], [573.0, 35821.5], [569.0, 34879.0], [559.0, 37014.0], [545.0, 35636.0], [549.0, 35931.0], [547.0, 36682.0], [551.0, 38277.0], [557.0, 36552.0], [555.0, 37080.0], [553.0, 35041.0], [567.0, 34691.0], [565.0, 36706.0], [579.0, 22373.0], [605.0, 33590.0], [577.0, 45703.0], [581.0, 36516.0], [583.0, 34792.0], [591.0, 36872.0], [589.0, 58371.0], [587.0, 35008.0], [585.0, 36202.0], [607.0, 45704.5], [593.0, 35367.0], [595.0, 34042.0], [603.0, 34134.0], [597.0, 34083.0], [637.0, 33503.0], [639.0, 56315.0], [625.0, 33567.0], [627.0, 34590.0], [635.0, 36454.0], [633.0, 33304.0], [623.0, 33891.0], [609.0, 35833.0], [611.0, 35019.0], [615.0, 43025.666666666664], [621.0, 56937.0], [619.0, 44944.5], [617.0, 46367.0], [631.0, 35749.0], [629.0, 34516.0], [669.0, 33862.0], [671.0, 33164.0], [657.0, 34016.0], [659.0, 33946.0], [665.0, 34388.0], [655.0, 33302.0], [643.0, 33833.0], [645.0, 33377.0], [647.0, 34537.0], [653.0, 33563.0], [651.0, 33286.0], [649.0, 34436.0], [663.0, 33325.0], [661.0, 33093.0], [675.0, 17391.333333333332], [697.0, 17530.666666666664], [677.0, 15497.25], [679.0, 17181.75], [673.0, 22498.0], [687.0, 21851.5], [685.0, 22729.5], [683.0, 22025.0], [681.0, 17871.333333333332], [695.0, 21495.5], [693.0, 21461.0], [703.0, 21674.0], [689.0, 21418.0], [691.0, 22493.0], [699.0, 20985.0], [701.0, 17323.333333333336], [721.0, 20811.5], [711.0, 21428.5], [719.0, 20818.5], [723.0, 33261.0], [725.0, 33074.0], [727.0, 33015.0], [735.0, 32865.0], [733.0, 32487.0], [729.0, 33039.0], [709.0, 20704.5], [707.0, 21467.0], [705.0, 17462.0], [717.0, 20253.0], [715.0, 20991.5], [713.0, 21407.5], [743.0, 32598.0], [763.0, 31598.0], [745.0, 22684.0], [747.0, 32432.0], [749.0, 32322.5], [753.0, 32750.0], [755.0, 31998.0], [765.0, 54792.0], [761.0, 31658.0], [741.0, 32631.0], [739.0, 33452.0], [751.0, 32207.0], [757.0, 31816.0], [797.0, 30647.0], [799.0, 30479.0], [785.0, 31202.0], [787.0, 31095.0], [795.0, 30829.0], [793.0, 30861.0], [783.0, 31174.0], [771.0, 31961.0], [769.0, 32090.0], [775.0, 31610.333333333332], [781.0, 31560.0], [779.0, 31687.0], [777.0, 31696.0], [791.0, 30938.0], [829.0, 51606.0], [831.0, 29076.0], [817.0, 40913.5], [821.0, 47422.0], [827.0, 29243.0], [825.0, 38233.5], [815.0, 29653.0], [801.0, 30384.0], [803.0, 30117.0], [805.0, 29952.0], [807.0, 52393.0], [811.0, 34309.0], [809.0, 29648.0], [823.0, 51854.0], [833.0, 38194.0], [841.0, 20251.0], [845.0, 45503.0], [847.0, 45956.0], [839.0, 51467.5], [837.0, 41876.0], [863.0, 44568.0], [849.0, 44746.0], [851.0, 45162.0], [853.0, 51203.0], [855.0, 50430.0], [861.0, 45110.0], [859.0, 50043.0], [857.0, 51158.0], [867.0, 21580.25], [877.0, 30758.5], [875.0, 50309.0], [873.0, 49927.0], [879.0, 35974.0], [895.0, 43194.0], [881.0, 49224.0], [883.0, 43421.0], [885.0, 43773.0], [893.0, 49587.0], [891.0, 43181.0], [889.0, 43324.5], [869.0, 44338.0], [887.0, 49448.0], [921.0, 31935.0], [925.0, 21012.0], [913.0, 21006.0], [915.0, 21018.0], [911.0, 21009.0], [897.0, 44729.5], [899.0, 21013.0], [901.0, 43659.5], [903.0, 42945.0], [909.0, 21010.0], [907.0, 21017.0], [905.0, 44417.0], [919.0, 40803.666666666664], [917.0, 43199.0], [957.0, 43259.0], [959.0, 34104.0], [947.0, 21009.0], [949.0, 43690.0], [955.0, 42622.0], [953.0, 21002.0], [943.0, 21008.333333333332], [929.0, 21002.333333333332], [933.0, 21002.0], [941.0, 21005.5], [937.0, 21015.0], [951.0, 21011.0], [985.0, 21002.0], [987.0, 16620.0], [991.0, 21009.5], [989.0, 21015.0], [975.0, 21008.5], [961.0, 34895.0], [963.0, 42103.0], [965.0, 21010.0], [967.0, 21013.0], [973.0, 21016.0], [971.0, 21003.0], [969.0, 21007.0], [983.0, 21008.0], [981.0, 28244.666666666668], [979.0, 21010.0], [977.0, 21007.0], [1021.0, 21020.0], [1009.0, 31640.5], [1011.0, 33509.0], [1013.0, 28074.333333333332], [1023.0, 42237.0], [1019.0, 21018.0], [993.0, 21001.666666666668], [995.0, 42774.0], [997.0, 39795.666666666664], [1005.0, 21015.333333333332], [1003.0, 21013.0], [1001.0, 42727.0], [1015.0, 21010.0], [1082.0, 19192.0], [1086.0, 40925.0], [1062.0, 40422.0], [1066.0, 21003.0], [1078.0, 19181.5], [1026.0, 21004.0], [1054.0, 21005.0], [1050.0, 21006.333333333332], [1042.0, 21015.0], [1070.0, 29425.5], [1118.0, 38775.0], [1106.0, 38910.0], [1110.0, 42354.0], [1114.0, 43982.0], [1090.0, 40735.0], [1094.0, 39378.0], [1102.0, 44445.0], [1150.0, 35499.5], [1122.0, 41668.0], [1126.0, 40528.5], [1130.0, 38429.0], [1134.0, 36926.0], [1146.0, 34597.0], [1142.0, 36209.0], [1138.0, 37288.0], [1206.0, 37573.0], [1214.0, 37308.5], [1186.0, 38462.0], [1210.0, 37915.0], [1202.0, 37812.0], [1154.0, 40115.0], [1158.0, 40802.0], [1162.0, 39195.0], [1166.0, 40075.0], [1178.0, 36662.5], [1174.0, 39108.0], [1170.0, 37763.666666666664], [1198.0, 38519.0], [1194.0, 37980.0], [1190.0, 38311.5], [1270.0, 35835.0], [1266.0, 35946.0], [1278.0, 34601.0], [1250.0, 36463.0], [1258.0, 35732.0], [1254.0, 35653.0], [1274.0, 35336.0], [1230.0, 36369.0], [1226.0, 36882.0], [1222.0, 36863.0], [1218.0, 37081.0], [1246.0, 36580.0], [1242.0, 36270.0], [1238.0, 37003.0], [1234.0, 37138.0], [1262.0, 35483.0], [1314.0, 33559.0], [1322.0, 33128.0], [1318.0, 33364.0], [1326.0, 32944.0], [1342.0, 36573.0], [1338.0, 36286.0], [1334.0, 32562.0], [1330.0, 36553.0], [1310.0, 33854.0], [1282.0, 35086.0], [1286.0, 34475.0], [1290.0, 34657.0], [1294.0, 33955.0], [1306.0, 38404.0], [1302.0, 34123.0], [1298.0, 33991.0], [1398.0, 22911.833333333336], [1394.0, 27193.666666666668], [1378.0, 24324.5], [1382.0, 27670.666666666668], [1386.0, 34236.0], [1390.0, 34081.0], [1402.0, 23256.000000000004], [1406.0, 33428.0], [1346.0, 22588.0], [1350.0, 25613.5], [1354.0, 25649.5], [1358.0, 14591.0], [1374.0, 24294.0], [1370.0, 24777.0], [1366.0, 24999.25], [1362.0, 24672.0], [1466.0, 31175.0], [1470.0, 22002.272727272728], [1442.0, 21535.478260869557], [1446.0, 22254.555555555555], [1450.0, 22049.428571428572], [1454.0, 23648.0], [1462.0, 31477.0], [1458.0, 24603.0], [1438.0, 32462.0], [1410.0, 33213.0], [1418.0, 25335.75], [1434.0, 31789.0], [1430.0, 27874.0], [1426.0, 24814.8], [1534.0, 18235.8], [1514.0, 24581.0], [1510.0, 29904.0], [1506.0, 30147.0], [1530.0, 28873.0], [1526.0, 22571.0], [1522.0, 21212.0], [1486.0, 20980.1], [1482.0, 31064.0], [1478.0, 30918.0], [1502.0, 30302.0], [1494.0, 30106.0], [1490.0, 25189.5], [1538.0, 19973.5], [1586.0, 26132.0], [1594.0, 19742.75], [1542.0, 20929.333333333332], [1566.0, 27868.0], [1562.0, 27864.0], [1558.0, 27092.0], [1554.0, 22882.0], [1550.0, 17914.5], [1546.0, 17516.0], [1570.0, 27224.0], [1574.0, 26882.0], [1578.0, 26900.0], [1582.0, 21209.0], [1598.0, 21064.0], [1610.0, 21112.0], [1650.0, 26232.0], [1602.0, 21034.0], [1630.0, 21110.0], [1626.0, 21158.333333333332], [1622.0, 21102.0], [1662.0, 21066.5], [1634.0, 21154.75], [1642.0, 21093.0], [1722.0, 21130.0], [1714.0, 21013.0], [1710.0, 19842.5], [1670.0, 21044.333333333332], [1694.0, 21069.0], [1690.0, 21048.0], [1682.0, 25934.0], [1786.0, 21272.0], [1806.0, 26121.5], [1850.0, 16374.0], [1822.0, 21276.0], [1814.0, 21250.0], [1810.0, 21302.0], [1834.0, 21406.0], [1842.0, 21382.333333333332], [1798.0, 23679.0], [1794.0, 21174.0], [1838.0, 21347.0], [1870.0, 20707.0], [1914.0, 25550.0], [1862.0, 21074.823529411766], [1906.0, 24801.0], [1882.0, 25628.0], [1878.0, 21123.5], [1874.0, 21134.0], [1894.0, 21048.666666666668], [1918.0, 20088.5], [1910.0, 20486.333333333332], [1926.0, 20073.0], [1974.0, 19697.5], [1922.0, 20357.0], [1950.0, 19575.0], [1962.0, 19597.0], [1970.0, 19450.333333333332], [1934.0, 19976.0], [1930.0, 25434.0], [1990.0, 19455.0], [2042.0, 23886.0], [2046.0, 23651.0], [2002.0, 19686.0], [2006.0, 19728.0], [2010.0, 19714.0], [1994.0, 19628.0], [1998.0, 19616.5], [2014.0, 19589.0], [2038.0, 19245.0], [2022.0, 19424.333333333332], [2030.0, 24224.0], [2018.0, 19673.5], [2068.0, 22808.5], [2108.0, 20782.0], [2100.0, 21691.0], [2092.0, 22113.0], [2084.0, 21676.0], [2076.0, 22508.0], [2060.0, 22915.0], [2052.0, 23441.5], [2148.0, 18923.0], [2116.0, 20838.0], [2124.0, 20705.333333333332], [2132.0, 19773.0], [2140.0, 20084.0], [2156.0, 18658.0], [2284.0, 16814.5], [2244.0, 17387.5], [2252.0, 15472.0], [2260.0, 15390.0], [2268.0, 18371.0], [2276.0, 17448.0], [2204.0, 17642.0], [2196.0, 17983.0], [2188.0, 18554.0], [2180.0, 11533.0], [2236.0, 21302.0], [2228.0, 16361.0], [2220.0, 16657.666666666668], [2212.0, 17020.0], [2292.0, 17968.0], [2061.0, 23193.0], [2157.0, 19344.0], [2053.0, 23379.0], [2069.0, 22949.0], [2077.0, 22472.0], [2109.0, 20451.0], [2101.0, 20657.0], [2093.0, 21483.0], [2149.0, 19548.0], [2125.0, 20634.0], [2133.0, 20266.0], [2141.0, 19403.0], [2173.0, 18295.0], [2277.0, 18007.0], [2285.0, 19025.0], [2245.0, 15793.0], [2253.0, 17797.0], [2261.0, 17478.0], [2269.0, 17633.0], [2205.0, 16495.0], [2197.0, 18186.0], [2189.0, 17733.0], [2181.0, 17682.0], [2237.0, 16073.0], [2229.0, 16456.0], [2221.0, 16574.0], [2213.0, 16674.0], [2293.0, 18470.0], [2301.0, 17754.0], [2309.0, 16152.0], [1087.0, 39254.0], [1055.0, 42271.0], [1027.0, 21007.5], [1031.0, 21004.666666666668], [1051.0, 21009.0], [1047.0, 21007.666666666668], [1059.0, 41202.5], [1063.0, 37644.0], [1067.0, 39900.0], [1083.0, 39363.0], [1079.0, 30099.5], [1071.0, 19217.0], [1091.0, 39612.333333333336], [1107.0, 44282.0], [1115.0, 44062.0], [1119.0, 39222.0], [1095.0, 44636.0], [1103.0, 12477.0], [1139.0, 38182.0], [1151.0, 38202.5], [1123.0, 40889.5], [1127.0, 37172.0], [1131.0, 38263.4], [1135.0, 36237.0], [1147.0, 40483.0], [1143.0, 36955.37500000001], [1211.0, 37106.0], [1203.0, 37448.0], [1215.0, 36979.0], [1191.0, 38075.0], [1187.0, 38494.0], [1195.0, 33489.0], [1207.0, 35479.0], [1167.0, 40017.0], [1163.0, 36037.0], [1155.0, 35081.5], [1183.0, 36754.5], [1179.0, 34543.0], [1175.0, 39070.0], [1199.0, 37941.0], [1275.0, 35077.0], [1279.0, 34971.0], [1251.0, 36202.0], [1255.0, 35704.0], [1271.0, 35244.0], [1267.0, 35321.0], [1247.0, 36707.0], [1227.0, 36756.0], [1223.0, 36771.0], [1231.0, 37084.0], [1243.0, 36221.0], [1239.0, 36437.0], [1235.0, 37110.0], [1259.0, 35498.0], [1343.0, 32136.0], [1323.0, 22896.0], [1319.0, 33263.0], [1315.0, 33523.0], [1339.0, 36908.0], [1335.0, 32555.0], [1331.0, 32739.0], [1311.0, 33794.0], [1283.0, 35038.0], [1287.0, 34618.0], [1291.0, 34637.0], [1295.0, 34388.0], [1307.0, 33959.0], [1303.0, 33700.0], [1299.0, 34198.0], [1327.0, 32940.0], [1407.0, 23842.1], [1383.0, 34283.0], [1395.0, 22244.375], [1403.0, 24450.166666666664], [1379.0, 24563.0], [1387.0, 20752.333333333332], [1391.0, 13892.0], [1399.0, 23466.0], [1375.0, 24346.5], [1347.0, 15784.0], [1351.0, 25285.0], [1355.0, 25465.5], [1359.0, 28756.0], [1371.0, 24732.0], [1367.0, 24907.0], [1363.0, 25042.5], [1463.0, 22176.88888888889], [1467.0, 31610.0], [1471.0, 23745.75], [1443.0, 21714.470588235294], [1451.0, 31944.0], [1455.0, 30965.0], [1459.0, 22214.666666666668], [1439.0, 21578.208333333332], [1411.0, 25259.25], [1415.0, 26914.8], [1419.0, 23784.909090909092], [1423.0, 32741.5], [1435.0, 32306.0], [1431.0, 33200.0], [1427.0, 24583.5], [1535.0, 27843.0], [1515.0, 20752.714285714283], [1507.0, 20190.705882352933], [1519.0, 21646.555555555555], [1531.0, 23972.0], [1527.0, 28268.0], [1523.0, 22474.333333333332], [1487.0, 30143.0], [1483.0, 21079.0], [1479.0, 21451.518518518515], [1475.0, 31261.5], [1503.0, 30276.0], [1499.0, 30255.5], [1495.0, 30473.0], [1491.0, 30506.0], [1539.0, 22707.0], [1567.0, 27264.0], [1543.0, 19247.4], [1563.0, 27718.0], [1559.0, 27010.0], [1555.0, 27793.0], [1551.0, 20585.333333333332], [1547.0, 19002.333333333332], [1599.0, 21046.0], [1571.0, 27365.0], [1583.0, 21213.5], [1595.0, 26022.0], [1603.0, 21048.0], [1631.0, 19989.0], [1611.0, 21125.0], [1623.0, 21094.0], [1635.0, 26508.0], [1643.0, 21064.0], [1651.0, 25783.0], [1647.0, 21073.0], [1707.0, 21019.0], [1711.0, 25655.0], [1715.0, 25580.0], [1695.0, 21022.0], [1667.0, 21039.666666666668], [1671.0, 21019.0], [1675.0, 21058.333333333332], [1691.0, 21035.0], [1687.0, 21028.0], [1735.0, 15868.0], [1787.0, 21385.0], [1783.0, 25776.5], [1743.0, 21205.81818181818], [1799.0, 21308.0], [1819.0, 21257.5], [1823.0, 21483.0], [1811.0, 21312.0], [1851.0, 15400.0], [1827.0, 21389.666666666668], [1831.0, 21340.5], [1835.0, 21411.0], [1803.0, 21268.5], [1795.0, 21244.0], [1839.0, 21359.0], [1907.0, 20461.0], [1859.0, 19428.0], [1867.0, 21142.5], [1871.0, 21119.0], [1883.0, 16251.0], [1875.0, 21142.0], [1919.0, 19618.0], [1891.0, 21049.666666666668], [1899.0, 20043.0], [1903.0, 21022.0], [1927.0, 20576.0], [1923.0, 20273.0], [1959.0, 20190.0], [1951.0, 19568.0], [1947.0, 19575.0], [1939.0, 20157.0], [1979.0, 19669.5], [1955.0, 24975.0], [1963.0, 19577.5], [1975.0, 19597.0], [1935.0, 24451.0], [1967.0, 19575.5], [2015.0, 19605.0], [2003.0, 24750.0], [2007.0, 19610.0], [2011.0, 19603.0], [1991.0, 19443.0], [1995.0, 19766.0], [1999.0, 19416.0], [2027.0, 24071.666666666668], [2031.0, 14443.0], [2047.0, 23851.0], [2043.0, 23712.0], [2070.0, 22291.0], [2110.0, 20418.0], [2102.0, 21289.0], [2094.0, 21734.0], [2086.0, 21833.0], [2078.0, 22415.0], [2062.0, 23078.0], [2054.0, 23358.0], [2150.0, 19599.0], [2118.0, 20506.5], [2126.0, 19971.0], [2134.0, 20091.0], [2142.0, 19776.0], [2278.0, 21236.0], [2254.0, 15516.0], [2294.0, 16323.0], [2246.0, 15819.0], [2262.0, 18373.0], [2270.0, 14834.0], [2206.0, 17391.0], [2198.0, 17397.0], [2190.0, 18057.0], [2182.0, 18561.0], [2238.0, 16584.0], [2230.0, 16408.0], [2222.0, 16762.0], [2214.0, 17059.0], [2286.0, 19749.0], [2302.0, 17031.0], [2310.0, 17048.0], [2071.0, 22070.0], [2111.0, 21139.0], [2055.0, 23282.0], [2063.0, 23056.0], [2087.0, 22041.0], [2151.0, 19547.0], [2175.0, 18588.666666666668], [2119.0, 20141.0], [2127.0, 20843.0], [2135.0, 20295.0], [2143.0, 19851.0], [2207.0, 16406.0], [2279.0, 16894.0], [2247.0, 16871.0], [2255.0, 15476.0], [2263.0, 15137.0], [2271.0, 17459.0], [2199.0, 17444.0], [2191.0, 18334.0], [2183.0, 18370.0], [2239.0, 15928.0], [2231.0, 18393.0], [2215.0, 16927.0], [2287.0, 18932.0], [2295.0, 18309.0], [2311.0, 16089.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1185.628390075015, 28600.952106174238]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2311.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3717.233333333333, "minX": 1.59348726E12, "maxY": 1560005.9666666666, "series": [{"data": [[1.59348726E12, 650378.6166666667], [1.59348732E12, 1560005.9666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.59348726E12, 3717.233333333333], [1.59348732E12, 8818.733333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59348732E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 16153.55483870967, "minX": 1.59348726E12, "maxY": 33165.652208201944, "series": [{"data": [[1.59348726E12, 16153.55483870967], [1.59348732E12, 33165.652208201944]], "isOverall": false, "label": "HomePage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59348732E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7448.968817204286, "minX": 1.59348726E12, "maxY": 21026.153391167198, "series": [{"data": [[1.59348726E12, 7448.968817204286], [1.59348732E12, 21026.153391167198]], "isOverall": false, "label": "HomePage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59348732E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10795.87204301075, "minX": 1.59348726E12, "maxY": 27082.08004731867, "series": [{"data": [[1.59348726E12, 10795.87204301075], [1.59348732E12, 27082.08004731867]], "isOverall": false, "label": "HomePage", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59348732E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 791.0, "minX": 1.59348726E12, "maxY": 74915.0, "series": [{"data": [[1.59348726E12, 26418.0], [1.59348732E12, 74915.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.59348726E12, 791.0], [1.59348732E12, 25623.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.59348726E12, 22905.000000000004], [1.59348732E12, 53778.400000000016]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.59348726E12, 25911.6], [1.59348732E12, 73465.15]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.59348726E12, 24355.6], [1.59348732E12, 69352.1]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59348732E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3344.0, "minX": 3.0, "maxY": 74393.0, "series": [{"data": [[32.0, 47305.0], [35.0, 38657.0], [37.0, 18978.5], [39.0, 33037.0], [41.0, 39892.0], [40.0, 43533.0], [43.0, 23742.5], [3.0, 6954.0], [52.0, 32512.5], [55.0, 33985.0], [58.0, 43605.0], [60.0, 27506.5], [63.0, 29995.0], [75.0, 41943.0], [5.0, 12712.0], [85.0, 42322.0], [86.0, 53126.0], [88.0, 24739.0], [97.0, 28697.0], [109.0, 33738.0], [7.0, 10520.0], [8.0, 13366.5], [147.0, 26178.0], [10.0, 5438.0], [160.0, 32776.0], [172.0, 30929.5], [11.0, 3344.0], [12.0, 11139.5], [212.0, 31386.5], [13.0, 36496.0], [14.0, 17408.5], [15.0, 30761.0], [16.0, 16219.0], [17.0, 33263.0], [18.0, 36786.5], [19.0, 9490.0], [20.0, 32541.0], [21.0, 34137.0], [22.0, 35718.0], [23.0, 33704.0], [24.0, 23256.0], [25.0, 17872.0], [26.0, 35534.0], [27.0, 33325.0], [28.0, 41410.0], [29.0, 36799.0], [30.0, 28564.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 74393.0], [37.0, 8201.0], [147.0, 21064.0], [160.0, 22625.0], [41.0, 19207.0], [40.0, 72175.5], [43.0, 19471.0], [172.0, 21059.5], [212.0, 21093.5], [55.0, 71356.5], [58.0, 21009.0], [60.0, 16909.0], [63.0, 19483.0], [75.0, 21011.5], [85.0, 21009.0], [88.0, 19618.0], [97.0, 19362.0], [26.0, 73218.0], [109.0, 22691.5], [27.0, 70499.5], [28.0, 7978.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 51413.5, "series": [{"data": [[32.0, 43152.0], [35.0, 34342.0], [37.0, 14533.0], [39.0, 29886.0], [41.0, 35162.0], [40.0, 39413.0], [43.0, 19337.0], [3.0, 5074.0], [52.0, 29830.5], [55.0, 29768.0], [58.0, 39312.0], [60.0, 23281.0], [63.0, 26244.0], [75.0, 37632.0], [5.0, 9700.0], [85.0, 38178.0], [86.0, 51413.5], [88.0, 20467.5], [97.0, 24455.5], [109.0, 29527.0], [7.0, 7742.0], [8.0, 9966.0], [147.0, 22125.5], [10.0, 4265.5], [160.0, 28417.0], [172.0, 26552.5], [11.0, 2947.0], [12.0, 8263.0], [212.0, 27194.5], [13.0, 32716.0], [14.0, 12727.0], [15.0, 26746.0], [16.0, 11885.5], [17.0, 29246.5], [18.0, 32375.5], [19.0, 6958.0], [20.0, 28359.0], [21.0, 30022.5], [22.0, 31788.5], [23.0, 29535.0], [24.0, 19663.0], [25.0, 13177.0], [26.0, 31479.0], [27.0, 29292.0], [28.0, 37300.0], [29.0, 32675.0], [30.0, 24417.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 0.0], [37.0, 0.0], [147.0, 0.0], [160.0, 0.0], [41.0, 0.0], [40.0, 0.0], [43.0, 0.0], [172.0, 0.0], [212.0, 0.0], [55.0, 0.0], [58.0, 0.0], [60.0, 0.0], [63.0, 0.0], [75.0, 0.0], [85.0, 0.0], [88.0, 0.0], [97.0, 0.0], [26.0, 0.0], [109.0, 0.0], [27.0, 0.0], [28.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.7, "minX": 1.59348726E12, "maxY": 44.06666666666667, "series": [{"data": [[1.59348726E12, 44.06666666666667], [1.59348732E12, 13.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59348732E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.59348726E12, "maxY": 24.633333333333333, "series": [{"data": [[1.59348726E12, 2.5], [1.59348732E12, 7.6]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.59348726E12, 10.383333333333333], [1.59348732E12, 24.633333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.59348726E12, 2.6166666666666667], [1.59348732E12, 10.033333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59348732E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.116666666666666, "minX": 1.59348726E12, "maxY": 24.633333333333333, "series": [{"data": [[1.59348726E12, 5.116666666666666], [1.59348732E12, 17.633333333333333]], "isOverall": false, "label": "HomePage-failure", "isController": false}, {"data": [[1.59348726E12, 10.383333333333333], [1.59348732E12, 24.633333333333333]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59348732E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.116666666666666, "minX": 1.59348726E12, "maxY": 24.633333333333333, "series": [{"data": [[1.59348726E12, 10.383333333333333], [1.59348732E12, 24.633333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.59348726E12, 5.116666666666666], [1.59348732E12, 17.633333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59348732E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 36000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

